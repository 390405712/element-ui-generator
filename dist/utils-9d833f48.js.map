{"version":3,"file":"utils-9d833f48.js","sources":["../lib/utils.js"],"sourcesContent":["\n/**\n * @description: 生成表单控件使用的option\n * @param arr 原始list Record<string, string>[] | string[]\n * @param label 赋值label的key名 string\n * @param value 赋值value的key名 string\n * @param custom 自定义需要合并的对象 ?: {}\n * @return option[]\n */\nexport const getOption = (arr, label, value, custom) => {\n  if (!Array.isArray(arr)) return []\n  const options = []\n  let customKeys = []\n  if (custom) customKeys = Object.keys(custom)\n  arr.forEach((item) => {\n    let params = {\n      label: typeof item === 'string' ? item : item[label],\n      value: typeof item === 'string' ? item : item[value]\n    }\n    if (custom) {\n      customKeys.forEach((key) => {\n        params[key] = (item)[key]\n      })\n    }\n    options.push(params)\n  })\n  return options\n}\n\n/**\n * @description: 获取表单配置中指定的对象\n * @param formOption 表单配置 formOption[]\n * @param key 指定的key string\n * @return formOption\n\n */\nexport const getLabel = (formOption, key) => {\n  return formOption.filter(i => (i.formItem.prop) === key)[0] || {\n    type: 'input',\n    formItem: {\n      prop: '',\n      label: '',\n    }\n  }\n}\n\n/**\n * @description: 校验\n * @param rule rule对象 rule\n * @param propVal 对应prop的值 string\n * @param callback Function\n */\nconst getValidator = (\n  rule,\n  propVal,\n  callback\n) => {\n  const type = {\n    'input': '输入',\n    'input-number': '输入',\n    'select': '选择',\n    'tree-select': '选择',\n    'cascader': '选择',\n    'radio': '选择',\n    'radio-button': '选择',\n    'checkbox': '选择',\n    'checkbox-button': '选择',\n    'datetime': '选择',\n    'time': '选择',\n    'switch': '选择',\n    'upload': '上传',\n  }\n  const params = getLabel(rule.formOption, rule.field)\n  if (Array.isArray(propVal) && propVal.length === 0) return Promise.reject(`请${(type[params.type] || '完善')}${params.formItem.label}`)\n  if (!propVal) return Promise.reject(`请${(type[params.type] || '完善')}${params.formItem.label}`)\n  if (!params?.formItem?.rules) return Promise.resolve();\n  if (typeof params.formItem.rules.validator === 'function') {\n    params.formItem.rules.validator(rule, propVal).then(() => {\n      return callback()\n    }).catch((res) => {\n      return callback(new Error(res !== 'err' ? res : (params?.formItem.rules?.message ?? '')))\n    })\n  } else {\n    if (!(params.formItem.rules.validator).test(propVal)) return Promise.reject(params.formItem.rules.message)\n    return Promise.resolve();\n  }\n}\n\n/**\n * @description: 生成校验配置\n * @param formOption 表单配置 formOption[]\n * @param omit 不需要验证的key  string[]\n * @return FormRules\n */\nexport const getRules = (formOption, omit = []) => {\n  let rules = {}\n  formOption.forEach((i) => {\n    const prop = (typeof i === 'string' ? i : (i.formItem.prop));\n    if (!omit.includes(prop)) rules[prop] = [{ required: true, validator: getValidator, trigger: i.formItem?.rules?.trigger ?? 'blur', formOption }]\n  })\n  return rules\n}\n\nexport const CommonValidator = {\n  checkIphoneNum: (\n    rule,\n    value,\n  ) => {\n    if (!value) return Promise.reject('请输入手机号')\n    if (!/(0|86|17951)?(13[0-9]|15[012356789]|166|17[3678]|18[0-9]|14[57])[0-9]{8}$/.test(value)) {\n      return Promise.reject('手机格式有误')\n    }\n    return Promise.resolve()\n  }\n}"],"names":["getOption","arr","label","value","custom","options","customKeys","item","params","key","getLabel","formOption","i","getValidator","rule","propVal","callback","_a","type","res","getRules","omit","rules","_b","prop","CommonValidator"],"mappings":"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"}